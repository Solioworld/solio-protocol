export const factoryAbi = [
  {
    type: "constructor",
    inputs: [
      { name: "platformAdmin", type: "address", internalType: "address" },
      { name: "platformTreasury", type: "address", internalType: "address" },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "DEFAULT_ADMIN_ROLE",
    inputs: [],
    outputs: [{ name: "", type: "bytes32", internalType: "bytes32" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "PLATFORM_ADMIN_ROLE",
    inputs: [],
    outputs: [{ name: "", type: "bytes32", internalType: "bytes32" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "addBondingCurveImplement",
    inputs: [{ name: "impl", type: "address", internalType: "address" }],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "deployToken",
    inputs: [
      {
        name: "token",
        type: "tuple",
        internalType: "struct IBondingFactory.TokenInfo",
        components: [
          { name: "tokenType", type: "string", internalType: "string" },
          { name: "bondingCurveType", type: "string", internalType: "string" },
          { name: "name", type: "string", internalType: "string" },
          { name: "symbol", type: "string", internalType: "string" },
          { name: "metadata", type: "string", internalType: "string" },
          { name: "projectAdmin", type: "address", internalType: "address" },
          { name: "projectTreasury", type: "address", internalType: "address" },
          { name: "projectMintTax", type: "uint256", internalType: "uint256" },
          { name: "projectBurnTax", type: "uint256", internalType: "uint256" },
          {
            name: "raisingTokenAddr",
            type: "address",
            internalType: "address",
          },
          { name: "data", type: "bytes", internalType: "bytes" },
        ],
      },
      { name: "mintfirstAmount", type: "uint256", internalType: "uint256" },
    ],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "deployTokenWithHooks",
    inputs: [
      {
        name: "token",
        type: "tuple",
        internalType: "struct IBondingFactory.TokenInfo",
        components: [
          { name: "tokenType", type: "string", internalType: "string" },
          { name: "bondingCurveType", type: "string", internalType: "string" },
          { name: "name", type: "string", internalType: "string" },
          { name: "symbol", type: "string", internalType: "string" },
          { name: "metadata", type: "string", internalType: "string" },
          { name: "projectAdmin", type: "address", internalType: "address" },
          { name: "projectTreasury", type: "address", internalType: "address" },
          { name: "projectMintTax", type: "uint256", internalType: "uint256" },
          { name: "projectBurnTax", type: "uint256", internalType: "uint256" },
          {
            name: "raisingTokenAddr",
            type: "address",
            internalType: "address",
          },
          { name: "data", type: "bytes", internalType: "bytes" },
        ],
      },
      { name: "mintfirstAmount", type: "uint256", internalType: "uint256" },
      { name: "hooks", type: "address[]", internalType: "address[]" },
      { name: "datas", type: "bytes[]", internalType: "bytes[]" },
    ],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "getBondingCurveImplement",
    inputs: [
      { name: "bondingCurveType", type: "string", internalType: "string" },
    ],
    outputs: [{ name: "impl", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getBondingImplement",
    inputs: [{ name: "tokenType", type: "string", internalType: "string" }],
    outputs: [{ name: "impl", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getPair",
    inputs: [
      { name: "", type: "address", internalType: "address" },
      { name: "", type: "address", internalType: "address" },
    ],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getPlatformAdmin",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getPlatformTreasury",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getRoleAdmin",
    inputs: [{ name: "role", type: "bytes32", internalType: "bytes32" }],
    outputs: [{ name: "", type: "bytes32", internalType: "bytes32" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getRoute",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getTaxRateOfPlatform",
    inputs: [],
    outputs: [
      { name: "platformMintTax", type: "uint256", internalType: "uint256" },
      { name: "platformBurnTax", type: "uint256", internalType: "uint256" },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getToken",
    inputs: [{ name: "index", type: "uint256", internalType: "uint256" }],
    outputs: [{ name: "addr", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getTokenHooks",
    inputs: [{ name: "token", type: "address", internalType: "address" }],
    outputs: [{ name: "", type: "address[]", internalType: "address[]" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getTokensLength",
    inputs: [],
    outputs: [{ name: "len", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "grantRole",
    inputs: [
      { name: "role", type: "bytes32", internalType: "bytes32" },
      { name: "account", type: "address", internalType: "address" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "hasRole",
    inputs: [
      { name: "role", type: "bytes32", internalType: "bytes32" },
      { name: "account", type: "address", internalType: "address" },
    ],
    outputs: [{ name: "", type: "bool", internalType: "bool" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "renounceRole",
    inputs: [
      { name: "role", type: "bytes32", internalType: "bytes32" },
      { name: "account", type: "address", internalType: "address" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "revokeRole",
    inputs: [
      { name: "role", type: "bytes32", internalType: "bytes32" },
      { name: "account", type: "address", internalType: "address" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setPlatformAdmin",
    inputs: [
      { name: "newPlatformAdmin", type: "address", internalType: "address" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setPlatformTaxRate",
    inputs: [
      { name: "platformMintTax", type: "uint256", internalType: "uint256" },
      { name: "platformBurnTax", type: "uint256", internalType: "uint256" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setPlatformTreasury",
    inputs: [
      { name: "newPlatformTreasury", type: "address", internalType: "address" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setRoute",
    inputs: [{ name: "route", type: "address", internalType: "address" }],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "supportsInterface",
    inputs: [{ name: "interfaceId", type: "bytes4", internalType: "bytes4" }],
    outputs: [{ name: "", type: "bool", internalType: "bool" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "tokenHooks",
    inputs: [
      { name: "", type: "address", internalType: "address" },
      { name: "", type: "uint256", internalType: "uint256" },
    ],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "updateBondingImplement",
    inputs: [
      { name: "tokenType", type: "string", internalType: "string" },
      { name: "impl", type: "address", internalType: "address" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "Initialized",
    inputs: [
      { name: "", type: "uint8", indexed: false, internalType: "uint8" },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LogBondingCurveTypeImplAdded",
    inputs: [
      {
        name: "tokenType",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "impl",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LogHookRegistered",
    inputs: [
      {
        name: "token",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "hook",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      { name: "data", type: "bytes", indexed: false, internalType: "bytes" },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LogPlatformAdminChanged",
    inputs: [
      {
        name: "newAccount",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LogPlatformTaxChanged",
    inputs: [],
    anonymous: false,
  },
  {
    type: "event",
    name: "LogPlatformTreasuryChanged",
    inputs: [
      {
        name: "newAccount",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LogRouteChanged",
    inputs: [
      {
        name: "newRoute",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LogTokenDeployed",
    inputs: [
      {
        name: "tokenImpl",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "curveImpl",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "deployedAddr",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "LogTokenTypeImplAdded",
    inputs: [
      {
        name: "tokenType",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "impl",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "RoleAdminChanged",
    inputs: [
      { name: "role", type: "bytes32", indexed: true, internalType: "bytes32" },
      {
        name: "previousAdminRole",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "newAdminRole",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "RoleGranted",
    inputs: [
      { name: "role", type: "bytes32", indexed: true, internalType: "bytes32" },
      {
        name: "account",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "sender",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "RoleRevoked",
    inputs: [
      { name: "role", type: "bytes32", indexed: true, internalType: "bytes32" },
      {
        name: "account",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "sender",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
] as const;
